// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

sourceCompatibility = 1.8

sourceSets {
   main {
      java {
         srcDirs "${buildDir}/generated-sources/ws", "${buildDir}/generated-sources/wsdl"
      }
   }
}

configurations {
    jaxb
    cxf
}

eclipse {
   classpath {
      downloadSources = true
      downloadJavadoc = false
   }
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile 'junit:junit:4.12'
	jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.4-1'
	compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version: '3.0.2'
	compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http-jetty', version: '3.0.2'
	compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version: '3.0.2'
	compile group: 'org.springframework', name: 'spring-core', version: '3.2.0.RELEASE'
	compile group: 'org.springframework', name: 'spring-context', version: '3.2.0.RELEASE'
	compile group: 'org.springframework', name: 'spring-web', version: '3.2.0.RELEASE'
	cxf "org.apache.cxf:cxf-tools-wsdlto-core:3.0.2"
    cxf "org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:3.0.2"
    cxf "org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:3.0.2"

    cxf "org.jvnet.jaxb2_commons:jaxb2-fluent-api:3.0"
    cxf "org.apache.cxf.xjcplugins:cxf-xjc-ts:3.0.5"

    cxf "org.jvnet.jaxb2_commons:jaxb2-basics:0.11.0"

    compile "org.apache.cxf.xjc-utils:cxf-xjc-runtime:3.0.5"
    compile "org.jvnet.jaxb2_commons:jaxb2-basics-runtime:0.11.0"
    compile 'commons-lang:commons-lang:2.6'
	
}

task jaxb () {
    // output directory
    def jaxbTargetDir = file( "${buildDir}/generated-sources" )
    def jaxbTargetDirWs = file( jaxbTargetDir.path + '/ws' )

    // perform actions
    doLast {
        jaxbTargetDirWs.mkdirs()

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)
        ant.jaxbTargetDirWs = jaxbTargetDirWs

        // My-Webservice v1.10
        ant.xjc(
                destdir: '${jaxbTargetDirWs}',
                package: 'com.mike.ws.generated.v110',
                schema: 'src/main/xsd/Mustang.xsd',
                binding: 'src/main/xsd/global.xjb',
                extension:'true'
        )
    }
}

task wsdl2java(type: JavaExec) {
    ext {
         outputDir = file("${buildDir}/generated-sources/wsdl")
    }   
    systemProperties  = ['javax.xml.accessExternalSchema': 'file' , 'file.encoding':'UTF8']
    outputs.upToDateWhen { false }
    outputs.dir outputDir
    main = 'org.apache.cxf.tools.wsdlto.WSDLToJava'
    classpath = project.configurations.cxf
    args '-d', outputDir
    args '-fe', 'jaxws21'
    args '-client'
    args '-verbose'
    args '-validate'
    args '-mark-generated'
//  args '-xjc-X'
    args '-xjc-Xfluent-api'
    args '-xjc-Xts'
    args '-xjc-XhashCode'
    args '-xjc-Xequals'
    //args '-b',"$projectDir/src/main/resources/jaxws-custom-bindings.xjb" 
    args "$projectDir/src/main/webapp/WEB-INF/wsdl/CustomerOrders.wsdl"
    doLast {
         println "----- cxf jaxb2 files generated -----"
    }
}


jaxb.dependsOn wsdl2java
compileJava.dependsOn jaxb